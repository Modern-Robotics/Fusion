!function(){const e=require("../utils/logger"),r=require("."),o=require("express"),i=require("morgan"),s=require("body-parser"),n=require("method-override"),t=require("express-session"),u=require("memorystore")(t),c=require("passport"),l=require("fs"),g=require("shelljs"),a=require("os"),d=require("i18n"),f=require("path"),p=require("helmet"),v=require("compression");module.exports=async function(){e.verbose("Configuring public directory"),r.use(o.static(f.join(__dirname,"./../../public"))),e.verbose("Configuring API headers"),r.use((function(e,r,o){r.header("Access-Control-Allow-Origin",e.get("Origin")||"*"),r.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS, PUT, PATCH, DELETE, CONNECT"),r.header("Access-Control-Allow-Headers","Accept, Authorization, Content-Type, X-Requested-With, Range"),r.setHeader("Access-Control-Allow-Credentials",!0),o()})),e.verbose("Configuring API method override"),r.use(n("X-HTTP-Method-Override")),e.verbose("Configuring API request logging"),r.use(i("dev",{stream:e.stream})),e.verbose("Configuring JSON body parser"),r.use(s.json()),e.verbose("Configuring URL encodede body parser"),r.use(s.urlencoded({extended:!0})),e.verbose("Configuring server sessions"),r.use(t({secret:"ilovemyfusioncontroller",resave:!1,saveUninitialized:!1,store:new u({checkPeriod:864e5})})),e.verbose("Configuring authentication protocol"),r.use(c.initialize()),r.use(c.session()),e.verbose("Configuring API security"),r.use(p()),e.verbose("Configuring response compression"),r.use(v()),e.verbose("Configuring i18n defaults"),d.configure({defaultLocale:"en",locales:["en","es"],directory:f.join(__dirname,"./../../config/locales"),cookie:"NG_TRANSLATE_LANG_KEY",autoReload:!1,objectNotation:!0,syncFiles:!1,logDebugFn:function(r){e.debug(r)},logWarnFn:function(r){e.warn(r)},logErrorFn:function(r){e.error(r)}}),e.verbose("Configuring server with i18n support"),r.use(d.init);var C="app/filesystem";l.existsSync(C)||(e.verbose("Configuring file system"),l.mkdirSync(C)),"win32"!=a.platform()&&g.exec("sudo kill $(ps aux | grep '[s]udo python ../../diagnostics/diagnosticGUI.py' | awk '{print $2}')",{silent:!0})}()}();