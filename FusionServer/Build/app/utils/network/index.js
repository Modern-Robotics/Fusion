!function(){const e=require("os"),t=require("dns"),{promisify:r}=require("util"),n=r(t.resolve),s=require("./../../socket/index"),c=require("./../logger");module.exports=new class{constructor(){this.interfaces={},this.refreshInterfaces()}refreshInterfaces(){this.interfaces=e.networkInterfaces(),c.debug("Network interfaces refreshed.")}getAllInterfaces(){return this.refreshInterfaces(),c.debug("Fetched all network interfaces."),this.interfaces}getInterface(e){this.interfaces[e]||this.refreshInterfaces();const t=this.interfaces[e]||null;return t?c.debug(`Fetched details for interface: ${e}.`):c.warn(`Interface not found: ${e}.`),t}isInterfaceUp(e){const t=this.getInterface(e),r=t&&t.some((e=>!1===e.internal&&!e.address.includes("::")));return c.debug(`Checked status for interface ${e}. Is up: ${r}.`),r}filterByType(e,t="IPv4"){const r=this.getInterface(e);if(!r)return c.warn(`Cannot filter. Interface not found: ${e}.`),null;const n=r.filter((e=>e.family===t));return c.debug(`Filtered interface ${e} by type: ${t}. Found ${n.length} entries.`),n}async hasInternetAccess(){const e="google.com";let t=!1;try{await n(e),t=!0,c.debug(`Internet access detected. Successfully resolved ${e}.`)}catch(t){c.debug(`No internet access detected. Failed to resolve ${e}.`)}return s.sockets.emit("internet-access",t),t}getIpAddress(e,t="IPv4"){const r=this.getInterface(e);if(!r)return c.debug(`Interface not found: ${e}.`),null;const n=r.find((e=>e.family===t));return n?n.address:(c.debug(`IP address of type ${t} not found for interface: ${e}.`),null)}}}();