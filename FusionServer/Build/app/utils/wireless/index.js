!function(){const t=require("config"),e=require("./../logger"),n=require("./../shell"),r=require("fs-extra"),i=require("os"),o=require("./../../socket/index"),s=require("promise-callbacks").promisify,a=require("dns"),c=(s.method(a,"resolve"),require("wireless-tools/wpa_cli")),u=s.method(c,"status"),w=require("wireless-tools/ifconfig"),l=(s.method(w,"status"),require("./../software")),d={networkInterface:t.get("Wifi_NIC"),getNetworkInterface:function(){return this.networkInterface},setNetworkInterface:function(t){this.networkInterface=t},getNetworkStatus:async function(){let t={};try{l.getIsProductionMachine()&&(t=await u(this.getNetworkInterface()))}catch(t){e.warn(`Error scanning network status: ${t}`)}return e.debug(`Wifi Connection Status: ${JSON.stringify(t)}`),o.sockets.emit("wifi-connection",t),t},connectToNetwork:async function(t){try{if("raspberrypi"!=i.hostname())throw"Windows wifi connecting not supported";const o=t.ssid,s=t.password;let a=0;t.hidden&&(a=1),e.verbose('Connecting to "'+o+'" using password: "'+s+'"');let c="";if(c+="ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev"+i.EOL,c+="update_config=1"+i.EOL,c+="country=US"+i.EOL,c+=""+i.EOL,c+="network={"+i.EOL,c+='\tssid="'+o+'"'+i.EOL,c+="\tscan_ssid="+a+i.EOL,c+='\tpsk="'+s+'"'+i.EOL,c+="\tkey_mgmt=WPA-PSK"+i.EOL,c+="}",e.debug("WPA supplicant data: \n"+c),await r.writeFile("/etc/wpa_supplicant/wpa_supplicant.conf",c),"FAIL"==(await n.execAsync(`sudo wpa_cli -i ${this.networkInterface} reconfigure`,{silent:!0})).trim())throw"Invalid SSID or Password";const u=await this.monitorNetworkChange(o);e.info(u)}catch(t){throw t}},monitorNetworkChange:async function(n){return new Promise(((r,i)=>{e.debug("Monitoring network changes...");const o=this,s=t.get("Wireless.Connection.Timeout"),a=t.get("Wireless.Connection.Scanning.IntervalCheck");let c=t.get("Wireless.Connection.Scanning.Timeout"),u=0,w=!1,l=setInterval((async function(){try{u+=a,e.debug(`Attempting network change for ${u} milliseconds`),u>=c&&(clearInterval(l),i(`${n} not found`));let t=await o.getNetworkStatus();const d=t.wpa_state,g=t.ip;"SCANNING"==d&&w&&(clearInterval(l),i(`Incorrect password for ${n}`)),"COMPLETED"==d&&(null!=g?(clearInterval(l),r(`Connected to ${n}`)):e.debug(`Connected to ${n} but waiting for IP assignment`)),["ASSOCIATING","ASSOCIATED","4WAY_HANDSHAKE"].includes(d)&&!w&&(w=!0,c=s,e.debug(`${n} found`))}catch(t){throw e.warn(t),t}}),a)}))},hostApdPath:"/etc/hostapd/hostapd.conf",getAccessPointSettings:async function(){let t={SSID:"",Password:"mrirecruit"};if(l.getIsProductionMachine())try{t.SSID=await n.execAsync(`grep ^ssid ${this.hostApdPath} | awk -F '=' '{print $2}'`,{silent:!0}),t.Password=await n.execAsync(`grep ^wpa_passphrase ${this.hostApdPath} | awk -F '=' '{print $2}'`,{silent:!0})}catch(t){e.warn(t)}return t}};module.exports=d}();