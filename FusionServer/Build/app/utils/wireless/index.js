!function(){const t=require("config"),e=require("./../logger"),n=require("./../shell"),r=require("fs-extra"),s=require("os"),i=require("./../../socket/index"),o=require("promise-callbacks").promisify,c=require("dns"),a=o.method(c,"resolve"),u=require("wireless-tools/wpa_cli"),w=o.method(u,"status"),g=require("wireless-tools/ifconfig"),l=(o.method(g,"status"),require("./../software")),d={networkInterface:t.get("Wifi_NIC"),getNetworkInterface:function(){return this.networkInterface},setNetworkInterface:function(t){this.networkInterface=t},getNetworkStatus:async function(){let t={};try{l.getIsProductionMachine()&&(t=await w(this.getNetworkInterface()))}catch(t){e.warn(`Error scanning network status: ${t}`)}return e.debug(`Wifi Connection Status: ${JSON.stringify(t)}`),i.sockets.emit("wifi-connection",t),t},getEthernetStatus:async function(){return{}},getInternetAccess:async function(){let t=!1;try{await a("www.google.com"),t=!0}catch(t){e.warn(`Error checking internet access: ${t}`)}return e.debug(`Internet access: ${t}`),i.sockets.emit("internet-access",t),t},connectToNetwork:async function(t){try{if("raspberrypi"!=s.hostname())throw"Windows wifi connecting not supported";const i=t.ssid,o=t.password;let c=0;t.hidden&&(c=1),e.verbose('Connecting to "'+i+'" using password: "'+o+'"');let a="";if(a+="ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev"+s.EOL,a+="update_config=1"+s.EOL,a+="country=US"+s.EOL,a+=""+s.EOL,a+="network={"+s.EOL,a+='\tssid="'+i+'"'+s.EOL,a+="\tscan_ssid="+c+s.EOL,a+='\tpsk="'+o+'"'+s.EOL,a+="\tkey_mgmt=WPA-PSK"+s.EOL,a+="}",e.debug("WPA supplicant data: \n"+a),await r.writeFile("/etc/wpa_supplicant/wpa_supplicant.conf",a),"FAIL"==(await n.execAsync(`sudo wpa_cli -i ${this.networkInterface} reconfigure`,{silent:!0})).trim())throw"Invalid SSID or Password";const u=await this.monitorNetworkChange(i);e.info(u)}catch(t){throw t}},monitorNetworkChange:async function(n){return new Promise(((r,s)=>{e.debug("Monitoring network changes...");const i=this,o=t.get("Wireless.Connection.Timeout"),c=t.get("Wireless.Connection.Scanning.IntervalCheck");let a=t.get("Wireless.Connection.Scanning.Timeout"),u=0,w=!1,g=setInterval((async function(){try{u+=c,e.debug(`Attempting network change for ${u} milliseconds`),u>=a&&(clearInterval(g),s(`${n} not found`));let t=await i.getNetworkStatus();const l=t.wpa_state,d=t.ip;"SCANNING"==l&&w&&(clearInterval(g),s(`Incorrect password for ${n}`)),"COMPLETED"==l&&(null!=d?(clearInterval(g),r(`Connected to ${n}`)):e.debug(`Connected to ${n} but waiting for IP assignment`)),["ASSOCIATING","ASSOCIATED","4WAY_HANDSHAKE"].includes(l)&&!w&&(w=!0,a=o,e.debug(`${n} found`))}catch(t){throw e.warn(t),t}}),c)}))},hostApdPath:"/etc/hostapd/hostapd.conf",getAccessPointSettings:async function(){let t={SSID:"",Password:"mrirecruit"};if(l.getIsProductionMachine())try{t.SSID=await n.execAsync(`grep ^ssid ${this.hostApdPath} | awk -F '=' '{print $2}'`,{silent:!0}),t.Password=await n.execAsync(`grep ^wpa_passphrase ${this.hostApdPath} | awk -F '=' '{print $2}'`,{silent:!0})}catch(t){e.warn(t)}return t}};module.exports=d}();