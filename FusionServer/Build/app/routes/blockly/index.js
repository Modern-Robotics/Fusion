!function(){const e=require("../../utils/logger"),t=require("fs-extra"),n=require("path"),a=require("../../express"),o=require("directory-tree"),i=require("scp2"),l=require("ssh2").Client,s=require("../../classroom/connection"),m=require("mkdirp"),r=require("../../fusionProgram");let u="";const d=n.join(__dirname,"../../../public/app/components/blockly/Examples"),c=function(e){if("directory"==e.type)"Examples"==e.name?(u+="<md-menu>",u+='<md-button ng-click="$mdMenu.open()" translate="BLOCKLY.MENUBAR_HELP_EXAMPLES" aria-label="Blockly Examples"></md-button>',u+="<md-menu-content>",c(e.children),u+="</md-menu-content>",u+="</md-menu>"):(u+="<md-menu-item>",u+="<md-menu>",u+='<md-button ng-click="$mdMenu.open()">'+e.name+"</md-button>",u+="<md-menu-content>",c(e.children),u+="</md-menu-content>",u+="</md-menu>",u+="</md-menu-item>");else if(e.constructor===Array)for(var t=0;t<e.length;t++)c(e[t]);else"file"==e.type&&(u+="<md-menu-item>",u+="<md-button ng-click=\"openExampleProgram('"+e.name+"','"+e.path.split("\\").join("/")+"')\">"+e.name+"</md-button>",u+="</md-menu-item>")},b=o(d,{extensions:/\.blk$/,attributes:["size","type"]});c(b);const f='<div class="fusion-toolbar-container"><md-toolbar class="md-menu-toolbar" ng-cloak><div layout="row"><div class="fusion-toolbar"><h2 class="md-toolbar-tools" ng-class="isExampleFile(SelectedFile)">{{displaySaveSymbol(SelectedFile.NeedsSaving)}} {{SelectedFile.Name}}</h2><div><md-menu-bar><md-menu><button ng-click="$mdMenu.open()" class="fusion-toolbar-item" translate="BLOCKLY.MENUBAR_FILE"></button><md-menu-content><md-menu-item><md-button ng-click="NewBlocklyFile()" translate="BLOCKLY.MENUBAR_FILE_NEW" aria-label="New File"></md-button></md-menu-item><md-menu-item><md-button ng-click="OpenFileDialog(ev)" translate="BLOCKLY.MENUBAR_FILE_OPEN" aria-label="Open File"></md-button></md-menu-item><md-menu-item><md-button ng-click="NewBlocklyFile()" translate="BLOCKLY.MENUBAR_FILE_CLOSE" aria-label="Close File"></md-button></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item><md-button ng-click="SaveBlocklyFile()" translate="BLOCKLY.MENUBAR_FILE_SAVE" aria-label="Save File"></md-button> </md-menu-item><md-menu-item><md-button ng-click="SaveAsDialog(ev)" translate="BLOCKLY.MENUBAR_FILE_SAVE_AS" aria-label="Save File As"></md-button></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item><md-button ng-click="DeleteDialog(ev)" translate="BLOCKLY.MENUBAR_FILE_DELETE" aria-label="Delete File"></md-button></md-menu-item></md-menu-content></md-menu><md-menu><button ng-click="$mdMenu.open()" class="fusion-toolbar-item" translate="BLOCKLY.MENUBAR_VIEW"></button><md-menu-content><md-menu-item class="md-indent"><md-menu><md-button ng-click="$mdMenu.open()" translate="BLOCKLY.MENUBAR_VIEW_MODE" aria-label="Blockly Mode"></md-button><md-menu-content width="3"><md-menu-item type="radio" ng-model="Settings.Mode" value="basic" ng-click="setToolbox()"><div>{{"BLOCKLY.MENUBAR_VIEW_MODE_BASIC" | translate}}</div></md-menu-item><md-menu-item type="radio" ng-model="Settings.Mode" value="intermediate" ng-click="setToolbox()"><div>{{"BLOCKLY.MENUBAR_VIEW_MODE_INTERMEDIATE" | translate}}</div></md-menu-item></md-menu-content></md-menu> </md-menu-item><md-menu-divider></md-menu-divider><md-menu-item type="checkbox" ng-model="Settings.ShowConsole" ng-click="resizeBlockly()"><div>{{"BLOCKLY.MENUBAR_VIEW_PROGRAM_OUTPUT" | translate}}</div></md-menu-item><md-menu-item type="checkbox" ng-model="Settings.ShowCode" ng-click="resizeBlockly()"><div>{{"BLOCKLY.MENUBAR_VIEW_CODE_WINDOW" | translate}}</div><div translate=""></div></md-menu-item></md-menu-content></md-menu><md-menu><button ng-click="$mdMenu.open()" class="fusion-toolbar-item" translate="BLOCKLY.MENUBAR_MANAGE"></button><md-menu-content><md-menu-item><md-button ng-click="UploadFilesDialog()" translate="BLOCKLY.MENUBAR_MANAGE_IMPORT" aria-label="Upload Files"></md-button></md-menu-item><md-menu-item><md-button ng-click="DownloadFilesDialog()" translate="BLOCKLY.MENUBAR_MANAGE_EXPORT" aria-label="Download Files"></md-button></md-menu-item></md-menu-content></md-menu><md-menu><button ng-click="$mdMenu.open()" class="fusion-toolbar-item" translate="BLOCKLY.MENUBAR_HELP"></button><md-menu-content>'+u+'<md-menu-item><md-button ng-click="takeToBlocklyDocs()" translate="BLOCKLY.MENUBAR_HELP_DOCUMENTATION" aria-label="Take to Blockly Documentation"></md-button></md-menu-item></md-menu-content></md-menu></md-menu-bar></div></div></div><div class="fusion-ribbon"><md-button class="fusion-ribbon-button tooltip" ng-click="NewBlocklyFile()" aria-label="New File"><md-tooltip><div translate="BLOCKLY.TOOLBAR_NEW_FILE_TOOLTIP"></div></md-tooltip><i class="far fa-file-alt fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="OpenFileDialog(ev)" aria-label="Open File"><md-tooltip><div translate="BLOCKLY.TOOLBAR_OPEN_FILE_TOOLTIP"></div></md-tooltip><i class="far fa-folder-open fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="SaveBlocklyFile()" aria-label="Save File"><md-tooltip><div translate="BLOCKLY.TOOLBAR_SAVE_FILE_TOOLTIP"></div></md-tooltip><i class="far fa-save fa-lg fa-fw"></i></md-button><md-button class="md-primary fusion-ribbon-button" ng-click="runExistingBlocklyProgram()" aria-label="Run Program"><md-tooltip><div translate="BLOCKLY.TOOLBAR_RUN_FILE_TOOLTIP"></div></md-tooltip><i class="fas fa-play fa-lg fa-fw"></i></md-button><md-button class="md-warn fusion-ribbon-button" ng-click="stopRunningBlocklyProgram()" aria-label="Stop Program"><md-tooltip><div translate="BLOCKLY.TOOLBAR_STOP_FILE_TOOLTIP"></div></md-tooltip><i class="fas fa-stop fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="toggleProgramOutput()" aria-label="Toggle Debug Console"><md-tooltip><div translate="BLOCKLY.TOOLBAR_TOGGLE_OUTPUT"></div></md-tooltip><i class="fas fa-terminal fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="toggleCodeWindow()" aria-label="Toggle Code Window"><md-tooltip><div translate="BLOCKLY.TOOLBAR_SHOW_CODE"></div></md-tooltip><i class="fas fa-code fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="OpenVirtualGamepad()" ng-disabled="DisableVirtualGamepad()" aria-label="Open Virtual Gamepad"><md-tooltip><div translate="BLOCKLY.TOOLBAR_GAMEPAD_TOOLTIP"></div></md-tooltip><i class="fas fa-gamepad fa-lg fa-fw"></i></md-button><md-button class="fusion-ribbon-button" ng-click="openInEditor()" aria-label="Open Program In Editor"><md-tooltip><div translate="BLOCKLY.TOOLBAR_OPEN_IN_EDITOR"></div></md-tooltip><i class="fas fa-external-link-square-alt fa-lg fa-fw"></i></md-button></div></md-toolbar></div>';module.exports=(a.get("/api/blockly",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(e,n){var a=e.user.filepath+"/Blockly";m(a,(function(e){if(e)return n.status(500).send(e);t.readdir(a,(function(e,t){return e?n.status(500).send(e):n.status(200).send(t)}))}))})),a.post("/api/blockly",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(n,a){t.stat(n.user.filepath+"/Blockly/"+n.body.filename,(function(o,l){return null==o?a.status(500).json({serverMessage:"A file with that name already exists"}):"ENOENT"!=o.code?a.status(500).json({serverMessage:"An error occurred"}):void t.writeFile(n.user.filepath+"/Blockly/"+n.body.filename,n.body.code,(function(t){return t?a.status(500).json({serverMessage:t}):(s.connected&&(o=n.user.filepath+"/Blockly/"+n.body.filename,l=n.user.username+"/Blockly/"+n.body.filename,i.scp(o,"c3:root@172.16.0.1:/home/c3/FusionFilesystem/"+l,(function(t){t?e.error(t):e.debug(`Created: '${l}' in classroom server`)}))),a.status(200).json({serverMessage:"Program Created Successfully"}));var o,l}))}))})),a.get("/api/blockly/:Program_Name",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(e,n){t.readFile(e.user.filepath+"/Blockly/"+e.params.Program_Name,"utf8",(function(e,t){e&&n.status(500).send(e),n.status(200).send(t)}))})),a.put("/api/blockly/:Program_Name",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(n,a){t.readFile(n.user.filepath+"/Blockly/"+n.params.Program_Name,"utf8",(function(o,l){if(o)return a.status(500).send(o);t.writeFile(n.user.filepath+"/Blockly/"+n.params.Program_Name,n.body.code,"utf-8",(function(t){return t?a.status(500).send(t):(s.connected&&(o=n.user.filepath+"/Blockly/"+n.params.Program_Name,l=n.user.username+"/Blockly/"+n.params.Program_Name,i.scp(o,"c3:root@172.16.0.1:/home/c3/FusionFilesystem/"+l,(function(t){t?e.error(t):e.debug(`Updated: '${l}' in classroom server`)}))),a.status(200).json({serverMessage:"Program Updated Successfully"}));var o,l}))}))})),a.delete("/api/blockly/:Program_Name",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(n,a){t.readFile(n.user.filepath+"/Blockly/"+n.params.Program_Name,"utf8",(function(o,i){return o?a.status(500).json({serverMessage:"File Does Not Exist."}):(t.unlinkSync(n.user.filepath+"/Blockly/"+n.params.Program_Name),s.connected&&(m=n.user.username+"/Blockly/"+n.params.Program_Name,(r=new l).on("ready",(function(){r.exec("rm /home/c3/FusionFilesystem/"+m,(function(t,n){if(t)throw t;n.on("close",(function(t,n){e.debug("Stream :: close :: code: "+t+", signal: "+n),r.end()})).on("data",(function(t){e.verbose("STDOUT: "+t)})).stderr.on("data",(function(t){e.error("STDERR: "+t)}))}))})).connect({host:"172.16.0.1",port:22,username:"c3",password:"root"})),a.status(200).json({serverMessage:"Program Deleted Successfully"}));var m,r}))})),a.post("/api/blockly/start",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(e,t){var n=r.StartBlocklyProgram(e.body.code,e.user.username,e.body.socketId);return t.status(n.status).json({serverMessage:n.message})})),a.post("/api/blockly/stop",(function(e,t,n){return e.isAuthenticated()?n():t.status(401).send("User Unauthenticated")}),(function(e,t){var n=r.StopProgram(e.user.username);return t.status(n.status).json({serverMessage:n.message})})),a.post("/api/blocklySamplePrograms",(function(e,n){t.readFile(e.body.filepath,"utf8",(function(e,t){return e?n.status(500).send("Error loading example"):n.status(200).send(t)}))})),void a.get("/api/blocklyToolbar",(function(e,t){return t.status(200).send(f)})))}();