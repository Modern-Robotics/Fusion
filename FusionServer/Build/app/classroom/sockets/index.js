const _0x2151=['identify','emit','./../../utils/logger','verbose','./socket','exports','Disconnected\x20from\x20classroom\x20socket','disconnect','serialId','fusion','connect','Connected\x20to\x20classroom\x20socket'];(function(_0x2bea90,_0x2151b7){const _0x2fb8be=function(_0x2c5606){while(--_0x2c5606){_0x2bea90['push'](_0x2bea90['shift']());}};_0x2fb8be(++_0x2151b7);}(_0x2151,0x11c));const _0x2fb8=function(_0x2bea90,_0x2151b7){_0x2bea90=_0x2bea90-0x0;let _0x2fb8be=_0x2151[_0x2bea90];return _0x2fb8be;};const socket=require(_0x2fb8('0x8'));const logger=require(_0x2fb8('0x6'));const classroomConnection=require('./../connection/');module[_0x2fb8('0x9')]=async function(){const _0x3fc61c=await require('../../serial');const _0x583626=_0x3fc61c[_0x2fb8('0x0')];socket['on'](_0x2fb8('0x2'),function(){logger['verbose'](_0x2fb8('0x3'));socket[_0x2fb8('0x5')](_0x2fb8('0x4'),{'clientType':_0x2fb8('0x1'),'serial':_0x583626});});socket['on'](_0x2fb8('0xb'),function(){logger[_0x2fb8('0x7')](_0x2fb8('0xa'));classroomConnection['connected']=![];});}();