!function(){const e=require("config"),i=require("../utils/logger"),t=require("."),n=require("../global/fusionSettings"),s=require("../fusionProgram"),a=require("child_process").spawn,o=require("internet-available"),r=require("wireless-tools/wpa_cli"),c=require("os"),l=require("shelljs"),u=require("path"),_=require("request"),g=require("./../events");module.exports=async function(){i.verbose("Configuring socket communication"),n.connectedClients=[];let f=u.dirname(__dirname).split(u.sep),b=f[f.length-2];var d=0;function k(){!function(){if("5.15.0-50-generic"!=c.release()){var e=a("python",["./scripts/ReadBatt.py"],{stdio:"pipe"});e.stdout.on("data",(function(e){n.SocketVariables.fusion_battery_level=String(e).trim(),d++})),e.stderr.on("data",(function(e){i.error("Error reading battery : \n"+String(e))}))}else d++}(),o({timeout:1e4,retries:5}).then((function(){n.SocketVariables.fusion_internet_access=!0,d++})).catch((function(){n.SocketVariables.fusion_internet_access=!1,d++})),l.exec("git rev-parse HEAD",{silent:!0},(function(e,i,t){var s;s=i.trim(),n.SocketVariables.fusion_current_SHA=s.trim(),d++,l.exec("git describe --tags "+n.SocketVariables.fusion_current_SHA,{silent:!0},(function(e,i,t){!function(e){n.SocketVariables.fusion_current_version=e.trim(),d++,"Build"==b?l.exec("git fetch",{silent:!0},(function(e,i,t){i.trim(),d++,S()})):(d++,S())}(i.trim())}))})),function(){n.SocketVariables.fusion_current_SHA!=n.SocketVariables.fusion_latest_SHA?n.SocketVariables.fusion_update_available=!0:n.SocketVariables.fusion_update_available=!1;d++}(),"5.15.0-50-generic"!=c.release()?l.exec("sudo netstat -panp | grep 5000 | grep LISTEN",{silent:!0},(function(e,i,t){var s;s=i.trim(),n.SocketVariables.fusion_gamepad_available=s.trim(),n.SocketVariables.fusion_gamepad_available?n.SocketVariables.fusion_gamepad_available=!0:n.SocketVariables.fusion_gamepad_available=!1,d++})):(n.SocketVariables.fusion_gamepad_available=!1,d++),"5.15.0-50-generic"!=c.release()?l.exec("ps aux | grep '[s]udo python ../../diagnostics/diagnosticGUI.py' | awk '{print $2}'",{silent:!0},(function(e,i,t){var s,a;s=i.trim(),(a=s.trim())?n.SocketVariables.fusion_diagnostics_running?n.SocketVariables.fusion_diagnostics_running.process=a:n.SocketVariables.fusion_diagnostics_running={process:a,socket:-1}:n.SocketVariables.fusion_diagnostics_running=null,d++})):(n.SocketVariables.fusion_gamepad_available=null,d++),r.status(e.get("Wifi_NIC"),(function(e,i){e&&(i={ssid:void 0,ip:void 0,mac:void 0}),n.SocketVariables.fusion_wifi_access=i,d++}))}function m(){d>=11?(i.debug(JSON.stringify(n.SocketVariables)),t.sockets.emit("battery-level",n.SocketVariables.fusion_battery_level),t.sockets.emit("internet-access",n.SocketVariables.fusion_internet_access),t.sockets.emit("version-number",n.SocketVariables.fusion_current_version),t.sockets.emit("update-available",n.SocketVariables.fusion_update_available),t.sockets.emit("gamepad-available",n.SocketVariables.fusion_gamepad_available),t.sockets.emit("diagnostics_running",n.SocketVariables.fusion_diagnostics_running),t.sockets.emit("wifi-connection",n.SocketVariables.fusion_wifi_access),t.sockets.emit("wifi-fusion_storage_type",n.Storage.type),t.sockets.emit("program-running",n.SocketVariables.fusion_program_running),d=0):setTimeout(m,2e3)}function S(){l.exec("git rev-list --tags --max-count=1",{silent:!0},(function(e,i,t){var s;s=i.trim(),n.SocketVariables.fusion_latest_SHA=s.trim(),d++,l.exec("git describe --tags "+n.SocketVariables.fusion_latest_SHA,{silent:!0},(function(e,i,t){!function(e){n.SocketVariables.fusion_latest_version=e.trim(),d++}(i.trim())}))}))}t.on("connection",(function(e){n.connectedClients.push(e),i.debug(`Client connected: ${e.id}`),t.sockets.emit("battery-level",n.SocketVariables.fusion_battery_level),t.sockets.emit("internet-access",n.SocketVariables.fusion_internet_access),t.sockets.emit("version-number",n.SocketVariables.fusion_current_version),t.sockets.emit("update-available",n.SocketVariables.fusion_update_available),t.sockets.emit("gamepad-available",n.SocketVariables.fusion_gamepad_available),t.sockets.emit("diagnostics_running",n.SocketVariables.fusion_diagnostics_running),t.sockets.emit("wifi-connection",n.SocketVariables.fusion_wifi_access),t.sockets.emit("program-running",n.SocketVariables.fusion_program_running),e.on("join",(function(i){e.emit("global-message",{message:"Connected to server",type:"success"}),g.emit("client-connected")})),e.on("disconnect",(function(a){i.debug(`Client disconnected: ${e.id} because "${a}"`),n.SocketVariables.fusion_program_running&&n.SocketVariables.fusion_program_running.SocketId==e.id&&s.KillProgram(),n.SocketVariables.fusion_diagnostics_running&&n.SocketVariables.fusion_diagnostics_running.socket==e.id&&(i.verbose("Terminating diagnostic tools due to absent client"),_({url:"http://localhost:8080/api/diagnostics/stop",method:"GET"},(function(e,s,a){e?i.error("Error terminating diagnostic tools : "+e):200==s.statusCode&&(n.SocketVariables.fusion_diagnostics_running=null),t.sockets.emit("diagnostics_running",n.SocketVariables.fusion_diagnostics_running)})));var o=n.connectedClients.indexOf(e);n.connectedClients.splice(o,1),g.emit("client-disconnected")})),e.on("error",(function(e){i.error("Socket error - "+e)}))})),m(),k(),setInterval((function(){m(),k()}),1e4)}()}();