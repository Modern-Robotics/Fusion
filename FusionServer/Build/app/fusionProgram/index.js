!function(){const r=require("../utils/logger"),n=require("../socket"),o=require("../global/fusionSettings"),e=require("child_process").spawn,i=require("shelljs"),t=require("os"),s=require("path"),a=require("./../events");let u=null;module.exports=function(){var g=function(){};function l(r,i){let t=`import os\nos.chdir('./app/filesystem/${i}/Editor')\nimport imp\nimp.load_source('util', r'${s.resolve(r)}')`;u=e("python",["-u","-B","-c",t],{stdio:"pipe"}),o.SocketVariables.fusion_program_running.Pid=u.pid,n.sockets.emit("program-running",o.SocketVariables.fusion_program_running),a.emit("program-running",!0),c(),u.stdout.on("data",p("console-output")),u.stderr.on("data",d("console-output")),u.stdout.on("close",k("console-output",u.pid))}function m(r,i){u=e("python",["-u","-B","-c",`import os\nos.chdir('./app/filesystem/${i}/Blockly')\nimport imp\n${r}`],{stdio:"pipe"}),o.SocketVariables.fusion_program_running.Pid=u.pid,n.sockets.emit("program-running",o.SocketVariables.fusion_program_running),a.emit("program-running",!0),c(),u.stdout.on("data",p("blockly-console-output")),u.stderr.on("data",d("blockly-console-output")),u.stdout.on("close",k("blockly-console-output",u.pid))}function c(){"raspberrypi"==t.hostname()&&setTimeout((function(){var r=i.exec("sudo netstat -panp | grep 5000 | grep LISTEN",{silent:!0}).stdout;o.SocketVariables.fusion_gamepad_available=!!r,n.sockets.emit("gamepad-available",o.SocketVariables.fusion_gamepad_available)}),1e3)}function p(o){return e=>{r.verbose(String(e).substring(0,e.lastIndexOf("\n"))),n.emit(o,{output:String(e)})}}function d(e){return i=>{r.verbose(String(i).substring(0,i.lastIndexOf("\n"))),n.emit(e,{output:String(i)}),n.sockets.emit("program-running",o.SocketVariables.fusion_program_running),n.sockets.emit("gamepad-available",!1)}}function k(e,i){return t=>{o.SocketVariables.fusion_program_running.Pid==i&&(o.SocketVariables.fusion_program_running=null,r.verbose(String("> Program Finished!")),n.emit(e,{output:String("> Program Finished!\n")}),n.sockets.emit("program-running",o.SocketVariables.fusion_program_running),n.sockets.emit("gamepad-available",!1),a.emit("program-running",!1))}}return g.StartProgram=function(n,e,i){if(o.SocketVariables.fusion_program_running){if(o.SocketVariables.fusion_program_running.User==n||"autonomous"==o.SocketVariables.fusion_program_running.SocketId){try{u.kill("SIGINT")}catch(r){}return o.SocketVariables.fusion_program_running={Code:null,Program:e,SocketId:i,User:n,Pid:null},l(e,n),r.verbose("Program is now running"),{status:200,message:"Program is now running"}}return r.verbose("Program already running"),{status:500,message:"Program already running"}}return o.SocketVariables.fusion_program_running={Code:null,Program:e,SocketId:i,User:n,Pid:null},l(e,n),r.verbose("Program is now running"),{status:200,message:"Program is now running"}},g.StopProgram=function(n){if(o.SocketVariables.fusion_program_running){if(o.SocketVariables.fusion_program_running.User==n||"autonomous"==o.SocketVariables.fusion_program_running.SocketId){try{u.kill("SIGINT")}catch(r){}return r.verbose("Program is now stopped"),{status:200,message:"Program Successfully Stopped"}}return r.verbose("Cannot stop another user program"),{status:500,message:"Cannot stop another user's program."}}return r.verbose("No program running"),{status:500,message:"No Program Running"}},g.KillProgram=function(){o.SocketVariables.fusion_program_running=null;try{u.kill("SIGINT")}catch(r){}r.verbose("Program is now stopped")},g.StartBlocklyProgram=function(n,e,i){if(o.SocketVariables.fusion_program_running){if(o.SocketVariables.fusion_program_running.User==e||"autonomous"==o.SocketVariables.fusion_program_running.SocketId){try{u.kill("SIGINT")}catch(r){}return o.SocketVariables.fusion_program_running={Code:n,Program:null,SocketId:i,User:e,Pid:null},m(n,e),r.verbose("Blockly Program is now running"),{status:200,message:"Blockly Program is now running"}}return r.verbose("Program already running"),{status:500,message:"Program already running"}}return o.SocketVariables.fusion_program_running={Code:n,Program:null,SocketId:i,User:e,Pid:null},m(n,e),r.verbose("Blockly Program is now running"),{status:200,message:"Blockly Program is now running"}},g.sendInput=function(r){u.stdin.write(r+"\n")},g}()}();